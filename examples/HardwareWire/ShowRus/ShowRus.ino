// ПРИМЕР ВЫВОДА РУССКОГО ТЕКСТА В РАЗНЫХ КОДИРОВКАХ:                  //
                                                                       //
// Arduino IDE в разное время использовала разную кодировку, значит    //
// в некоторых версиях кириллица на экран может выводиться некорректно //
// для исправления этой проблемы нужно указать кодировку setCoding().  //
                                                                       //
// OLED экран 128×64 / 0,96" (Trema-модуль):                           // https://iarduino.ru/shop/displays/ekran-0-96-128x64-oled-i2c-belyy.html
// Информация о подключении модулей к шине I2C:                        // https://wiki.iarduino.ru/page/i2c_connection/
// Информация о модуле и описание библиотеки:                          // https://wiki.iarduino.ru/page/OLED_trema/
// Библиотека   iarduino_OLED_txt (текстовая  ) экономит ОЗУ:          // https://iarduino.ru/file/341.html
// Библиотека   iarduino_OLED     (графическая):                       // https://iarduino.ru/file/340.html
                                                                       //
#include <Wire.h>                                                      // Подключаем библиотеку для работы с аппаратной шиной I2C, до подключения библиотеки iarduino_OLED_txt.
#include <iarduino_OLED_txt.h>                                         // Подключаем библиотеку iarduino_OLED_txt.
iarduino_OLED_txt myOLED(0x3C);                                        // Объявляем объект myOLED, указывая адрес дисплея на шине I2C: 0x3C или 0x3D.
                                                                       //
void setup(){                                                          //
     myOLED.begin(&Wire); // &Wire1, &Wire2 ...                        // Инициируем работу с дисплеем, указав ссылку на объект для работы с шиной I2C на которой находится дисплей (по умолчанию &Wire).
     myOLED.setFont(SmallFontRus);                                     // Указываем шрифт который требуется использовать для вывода цифр и текста.
}                                                                      //
                                                                       //
void loop(){                                                           //
                                                                       //
//   Вывод текста в кодировке UTF-8:                                   //
     myOLED.clrScr();                                                  // Чистим экран.
     myOLED.print("UTF8", 0, 0);                                       // Выводим текст начиная с 0 столбца 0 строки.
     myOLED.setCoding(TXT_UTF8);                                       // Меняем кодировку на UTF-8 (по умолчанию).
     myOLED.print("Ардуино iArduino", OLED_C, 4);                      // Выводим текст по центру 4 строки.
     delay(5000);                                                      // Ждём 5 секунд.
                                                                       //
//   Вывод текста в кодировке CP866:                                   //
     myOLED.clrScr();                                                  // Чистим экран.
     myOLED.print("CP866", 0, 0);                                      // Выводим текст начиная с 0 столбца 0 строки.
     myOLED.setCoding(TXT_CP866);                                      // Меняем кодировку на CP866.
     myOLED.print("Ардуино iArduino", OLED_C, 4);                      // Выводим текст по центру 4 строки.
     delay(5000);                                                      // Ждём 5 секунд.
                                                                       //
//   Вывод текста в кодировке WINDOWS-1251:                            //
     myOLED.clrScr();                                                  // Чистим экран.
     myOLED.print("WIN1251", 0, 0);                                    // Выводим текст начиная с 0 столбца 0 строки.
     myOLED.setCoding(TXT_WIN1251);                                    // Меняем кодировку на WINDOWS-1251.
     myOLED.print("Ардуино iArduino", OLED_C, 4);                      // Выводим текст по центру 4 строки.
     delay(5000);                                                      // Ждём 5 секунд.
                                                                       //
//   Вывод текста по коду символов:                                    //
     myOLED.clrScr();                                                  // Чистим экран.
     myOLED.print("CODE", 0, 0);                                       // Выводим текст начиная с 0 столбца 0 строки.
     myOLED.setCoding(false);                                          // Отменяем кодировку.
     myOLED.print("\200\340\244\343\250\255\256 iArduino", OLED_C, 4); // Выводим текст кодами символов по центру 4 строки.
     delay(5000);                                                      // Ждём 5 секунд.
}                                                                      //
                                                                       //
/*   КОДЫ СИМВОЛОВ:                                                    //
 *   Латинские буквы A-Z и a-z                                         // Вводятся как есть, вне зависимости от кодировки.
 *   Цифры 0-9 и символы !"#$%&'()*+,-./:;<=>?@[]^_`{|}~               // Вводятся как есть, вне зависимости от кодировки.
 *   Буквы АБВГДЕЖЗИЙКЛМНОП                                            // Код: 128-143 в 10-тичной системе счисления, для кодировки CP-866.
 *   Буквы РСТУФХЦЧШЩЪЫЬЭЮЯ                                            // Код: 144-159 в 10-тичной системе счисления, для кодировки CP-866.
 *   Буквы абвгдежзийклмноп                                            // Код: 160-175 в 10-тичной системе счисления, для кодировки CP-866. 
 *   Буквы рстуфхцчшщъыьэюя                                            // Код: 224-239 в 10-тичной системе счисления, для кодировки CP-866.
 *   Буквы Ё,ё                                                         // Код: 240,241 в 10-тичной системе счисления, для кодировки CP-866.
 *                                                                     //
 *   Для вывода любого символа нужно указать его код в 8-ричной системе//
 *   счисления, которому должен предшествовать символ '\', или указать //
 *   код в 16-ричной системе, тогда ему предшествует два символа "\x". //
 *                                                                     //
 *   Пример вывода Русской буквы «А» в кодировке CP-866:               //
 *   - букве «А» соответствует код 128.                                // Для перевода чисел из 10-тичной в 8-ричную и 16-ричную систему можно воспользоваться стандартным калькулятором в windows.
 *   - 128 DEC = 200 OCT = 80 HEX.                                     // Выберите вид калькулятора - «Программист» и введите число, Вы увидите его представление в разных системах счисления: HEX(16), DEC(10), OCT(8) и BIN(2).
 *   - Значит буква «А» записывается как \200 или \x80                 // Далее в примере следует буква «р» \340, «д» \244, «у» \343, «и» \250, «н» \255, «о» \256.
 *                                                                     //
 *   Запись текста кодами символов кажется более громоздкой, но        //
 *   на самом деле, такая запись занимает в 2 раза меньше памяти       //
 *   чем хранение текста Кириллицей в кодировке UTF-8.                 //
 *                                                                     //
 *   ДОСТУПНЫЕ ШРИФТЫ:                                                 // Шрифты можно менять и добавлять в файле: src/DefaultFonts.h
 *   SmallFont                                                         // Маленький шрифт  6x8  ( 95 символов) только латиница
 *   SmallFontRus                                                      // Маленький шрифт  6x8  (176 символов) латиница и кириллица
 *   MediumFont                                                        // Средний   шрифт 12x16 ( 95 символов) только латиница
 *   MediumFontRus                                                     // Средний   шрифт 12x16 (176 символов) латиница и кириллица
 *   MediumNumbers                                                     // Средние   цифры 12x16 ( 13 символов) 0123456789./-
 *   BigNumbers                                                        // Большие   цифры 14x24 ( 13 символов) 0123456789./-
 *   MegaNumbers                                                       // Большие   цифры 24x40 ( 13 символов) 0123456789./-
 */
